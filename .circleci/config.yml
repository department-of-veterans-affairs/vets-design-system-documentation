# Use the latest 2.1 version of CircleCI pipeline process engine. See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1
# Use a package of configuration called an orb.
orbs:
  aws-cli: circleci/aws-cli@1.3.1

jobs:
  build-deploy:
    docker:
      - image: cimg/ruby:2.7.2-node
    environment:
      AWS_DEFAULT_REGION: us-gov-west-1
    parameters:
      bucket:
        type: string

    steps:
      - checkout
      - aws-cli/setup
      - run: yarn install
        # If this works, think about adding it to the Gemfile
      - run: gem install bundler:1.16.6
      - run: bundle install
      - run: yarn build
      - run: bundle exec jekyll build
        # We are taking these extra steps due to some differences between Jekyll and AWS S3.
        # To access a .html file served from S3, the URL needs to have the .html extension.
        # We're removing the extension to make the URLs prettier.
        # More context:
        #   https://simpleit.rocks/ruby/jekyll/tutorials/having-pretty-urls-in-a-jekyll-website-hosted-in-amazon-s3/
      - run:
          name: Remove .html extension on non-index files
          command: |
            find _site/ -type f ! -iname 'index.html' -iname '*.html' \
            -print0 | while read -d $'\0' f; do mv "$f" "${f%.html}"; done
      - run:
          name: Sync extensionless html files with correct type
          command: |
            aws s3 sync _site s3://<< parameters.bucket >> \
            --acl public-read \
            --delete \
            --exclude "storybook/*" \
            --exclude "*.*" \
            --content-type "text/html"
      - run:
          name: Sync remaining files
          command: |
            aws s3 sync _site s3://<< parameters.bucket >> \
            --acl public-read \
            --delete \
            --exclude "*" \
            --include "*.*" \
            --exclude "storybook/*"

# Orchestrate or schedule a set of jobs
workflows:
  deploy-dev:
    jobs:
      - build-deploy:
          # Set the bucket parameter to be the dev bucket
          bucket: "dev-design.va.gov"
          filters:
            branches:
              only: master
          context:
            # The Platform context has the environment variables for setting up the aws cli
            - Platform
  deploy-staging:
    jobs:
      - build-deploy:
          # Set the bucket parameter to be the staging bucket
          bucket: "staging-design.va.gov"
          filters:
            branches:
              only: master
          context:
            # The Platform context has the environment variables for setting up the aws cli
            - Platform
  deploy-prod:
    jobs:
      - build-deploy:
          # Set the bucket parameter to be the prod bucket
          bucket: "design.va.gov"
          filters:
            branches:
              only: master
          context:
            # The Platform context has the environment variables for setting up the aws cli
            - Platform
