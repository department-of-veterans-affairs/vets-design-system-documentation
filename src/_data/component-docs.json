{
  "timestamp": "2022-04-09T01:10:25",
  "compiler": {
    "name": "@stencil/core",
    "version": "2.14.0",
    "typescriptVersion": "4.5.4"
  },
  "components": [
    {
      "filePath": "./src/components/va-accordion/va-accordion.tsx",
      "encapsulation": "shadow",
      "tag": "va-accordion",
      "docs": "",
      "docsTags": [
        {
          "name": "accordionItemToggled",
          "text": "This event is fired when an accordion item is opened or closed"
        }
      ],
      "usage": {},
      "props": [
        {
          "name": "bordered",
          "type": "boolean",
          "mutable": false,
          "attr": "bordered",
          "reflectToAttr": false,
          "docs": "Whether or not the accordion items will have borders",
          "docsTags": [],
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "disableAnalytics",
          "type": "boolean",
          "mutable": false,
          "attr": "disable-analytics",
          "reflectToAttr": false,
          "docs": "If true, doesn't fire the CustomEvent which can be used for analytics tracking.",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "openSingle",
          "type": "boolean",
          "mutable": false,
          "attr": "open-single",
          "reflectToAttr": false,
          "docs": "True if only a single item can be opened at once",
          "docsTags": [],
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "sectionHeading",
          "type": "string",
          "mutable": false,
          "attr": "section-heading",
          "reflectToAttr": false,
          "docs": "Optional accordion section heading text. Only used in analytics event. Default is null.",
          "docsTags": [],
          "default": "null",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        }
      ],
      "methods": [],
      "events": [
        {
          "event": "component-library-analytics",
          "detail": "any",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "The event used to track usage of the component. This is emitted when an\naccordion item is toggled and disableAnalytics is not true.",
          "docsTags": []
        }
      ],
      "listeners": [
        {
          "event": "accordionItemToggled",
          "capture": false,
          "passive": false
        }
      ],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/va-accordion/va-accordion-item.tsx",
      "encapsulation": "shadow",
      "tag": "va-accordion-item",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "header",
          "type": "string",
          "mutable": false,
          "attr": "header",
          "reflectToAttr": false,
          "docs": "The accordion item header text",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "level",
          "type": "number",
          "mutable": false,
          "attr": "level",
          "reflectToAttr": false,
          "docs": "Header level for button wrapper. Must be between 1 and 6",
          "docsTags": [],
          "default": "2",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "open",
          "type": "boolean",
          "mutable": false,
          "attr": "open",
          "reflectToAttr": false,
          "docs": "True if the item is open",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "subheader",
          "type": "string",
          "mutable": false,
          "attr": "subheader",
          "reflectToAttr": false,
          "docs": "Optional accordion item subheader text. Default is null.",
          "docsTags": [],
          "default": "null",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        }
      ],
      "methods": [],
      "events": [
        {
          "event": "accordionItemToggled",
          "detail": "any",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "This event is fired so that `<va-accordion>` can manage which items are opened or closed",
          "docsTags": []
        }
      ],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/va-additional-info/va-additional-info.tsx",
      "encapsulation": "shadow",
      "tag": "va-additional-info",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "disableAnalytics",
          "type": "boolean",
          "mutable": false,
          "attr": "disable-analytics",
          "reflectToAttr": false,
          "docs": "If true, doesn't fire the CustomEvent which can be used for analytics tracking.",
          "docsTags": [],
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "disableBorder",
          "type": "boolean",
          "mutable": false,
          "attr": "disable-border",
          "reflectToAttr": false,
          "docs": "If true, left blue border and padding is removed.",
          "docsTags": [],
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "trigger",
          "type": "string",
          "mutable": false,
          "attr": "trigger",
          "reflectToAttr": false,
          "docs": "The text to trigger the expansion",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        }
      ],
      "methods": [],
      "events": [
        {
          "event": "component-library-analytics",
          "detail": "any",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "The event used to track usage of the component. This is emitted when an\nanchor link is clicked and disableAnalytics is not true.",
          "docsTags": []
        }
      ],
      "listeners": [
        {
          "event": "resize",
          "target": "window",
          "capture": false,
          "passive": true
        }
      ],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/va-alert/va-alert.tsx",
      "encapsulation": "shadow",
      "tag": "va-alert",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "backgroundOnly",
          "type": "boolean",
          "mutable": false,
          "attr": "background-only",
          "reflectToAttr": false,
          "docs": "If true, renders the alert with only a background color corresponding\nto the status - no icon or left border.",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "closeBtnAriaLabel",
          "type": "string",
          "mutable": false,
          "attr": "close-btn-aria-label",
          "reflectToAttr": false,
          "docs": "Aria-label text for the close button.",
          "docsTags": [],
          "default": "'Close notification'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "closeable",
          "type": "boolean",
          "mutable": false,
          "attr": "closeable",
          "reflectToAttr": false,
          "docs": "If true, a close button will be displayed.",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "disableAnalytics",
          "type": "boolean",
          "mutable": false,
          "attr": "disable-analytics",
          "reflectToAttr": false,
          "docs": "If true, doesn't fire the CustomEvent which can be used for analytics tracking.",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "fullWidth",
          "type": "boolean",
          "mutable": false,
          "attr": "full-width",
          "reflectToAttr": false,
          "docs": "If true, the alert will be full width.\nShould be for emergency communication only.",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "showIcon",
          "type": "boolean",
          "mutable": false,
          "attr": "show-icon",
          "reflectToAttr": false,
          "docs": "This option only takes effect when background-only is true. If true, the background-only alert will\ninclude an icon.",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "status",
          "type": "string",
          "mutable": false,
          "attr": "status",
          "reflectToAttr": true,
          "docs": "Determines the icon and border/background color.\nOne of `info`, `error`, `success`, `warning`, or `continue`",
          "docsTags": [],
          "default": "'info'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "visible",
          "type": "boolean",
          "mutable": false,
          "attr": "visible",
          "reflectToAttr": false,
          "docs": "If true, the alert will be visible.",
          "docsTags": [],
          "default": "true",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        }
      ],
      "methods": [],
      "events": [
        {
          "event": "closeEvent",
          "detail": "any",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "Fires when the component is closed by clicking on the close icon. This fires only\nwhen closeable is true.",
          "docsTags": []
        },
        {
          "event": "component-library-analytics",
          "detail": "any",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "The event used to track usage of the component. This is emitted when an\nanchor link is clicked and disableAnalytics is not true.",
          "docsTags": []
        },
        {
          "event": "va-component-did-load",
          "detail": "any",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "Fires when the component has successfully finished rendering for the first\ntime.",
          "docsTags": []
        }
      ],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [
        "va-banner"
      ],
      "dependencies": [],
      "dependencyGraph": {
        "va-banner": [
          "va-alert"
        ]
      }
    },
    {
      "filePath": "./src/components/va-back-to-top/va-back-to-top.tsx",
      "encapsulation": "shadow",
      "tag": "va-back-to-top",
      "docs": "This component has three main behaviors:\n1. Going to the top of the page when the button is clicked\n2. \"Revealing\" after scrolling down far enough\n3. \"Docking\" when the dock becomes visible\n\nThe span.reveal-point determines when the reveal happens.\nIt uses `position: absolute` so the button will reveal when\nthe `span` is above the viewport.",
      "docsTags": [],
      "usage": {},
      "props": [],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/va-banner/va-banner.tsx",
      "encapsulation": "shadow",
      "tag": "va-banner",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "disableAnalytics",
          "type": "boolean",
          "mutable": false,
          "attr": "disable-analytics",
          "reflectToAttr": false,
          "docs": "If true, doesn't fire the CustomEvent which can be used for analytics tracking.",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "headline",
          "type": "string",
          "mutable": false,
          "attr": "headline",
          "reflectToAttr": false,
          "docs": "The headline of the banner.",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "showClose",
          "type": "boolean",
          "mutable": false,
          "attr": "show-close",
          "reflectToAttr": false,
          "docs": "Enable the close functionality. The banner will be closed until storage is cleared.",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "type",
          "type": "string",
          "mutable": false,
          "attr": "type",
          "reflectToAttr": false,
          "docs": "The type of the banner. One of 'info', 'error', 'success', 'continue', or 'warning'. This affects both the icon of the AlertBox and the top border color.",
          "docsTags": [],
          "default": "'info'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "visible",
          "type": "boolean",
          "mutable": false,
          "attr": "visible",
          "reflectToAttr": false,
          "docs": "A boolean that when false makes it so that the banner does not render.",
          "docsTags": [],
          "default": "true",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "windowSession",
          "type": "boolean",
          "mutable": false,
          "attr": "window-session",
          "reflectToAttr": false,
          "docs": "Enable sessionStorage for the Banner otherwise storage\nif showClose is enabled will default to localStorage",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        }
      ],
      "methods": [],
      "events": [
        {
          "event": "component-library-analytics",
          "detail": "any",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "The event used to track usage of the component. This is emitted when an\nanchor link or the dismiss icon is clicked and disableAnalytics is not true.",
          "docsTags": []
        }
      ],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [
        "va-alert"
      ],
      "dependencyGraph": {
        "va-banner": [
          "va-alert"
        ]
      }
    },
    {
      "filePath": "./src/components/va-breadcrumbs/va-breadcrumbs.tsx",
      "encapsulation": "shadow",
      "tag": "va-breadcrumbs",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "disableAnalytics",
          "type": "boolean",
          "mutable": false,
          "attr": "disable-analytics",
          "reflectToAttr": false,
          "docs": "Analytics tracking function(s) will not be called",
          "docsTags": [],
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "label",
          "type": "string",
          "mutable": false,
          "attr": "label",
          "reflectToAttr": false,
          "docs": "Adds an aria-label attribute to the <nav /> element.",
          "docsTags": [],
          "default": "'Breadcrumb'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        }
      ],
      "methods": [],
      "events": [
        {
          "event": "component-library-analytics",
          "detail": "any",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "The event used to track usage of the component. This is emitted when a\nbreadcrumb anchor is clicked and disableAnalytics is not true.",
          "docsTags": []
        }
      ],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/va-checkbox/va-checkbox.tsx",
      "encapsulation": "shadow",
      "tag": "va-checkbox",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "ariaDescribedby",
          "type": "string",
          "mutable": false,
          "attr": "aria-describedby",
          "reflectToAttr": false,
          "docs": "The aria-describedby attribute for the `<input>` in the shadow DOM.",
          "docsTags": [],
          "default": "''",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "checked",
          "type": "boolean",
          "mutable": true,
          "attr": "checked",
          "reflectToAttr": false,
          "docs": "Whether the checkbox is checked or not.\n\nNote: Because this isn't reflective, vaCheckbox.getAttribute('checked')\nwill not reflect the correct value. Use the property vaCheckbox.checked\ninstead.",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "description",
          "type": "string",
          "mutable": false,
          "attr": "description",
          "reflectToAttr": false,
          "docs": "The description to render. If this prop exists, va-checkbox will render it\ninstead of the named slot.",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "enableAnalytics",
          "type": "boolean",
          "mutable": false,
          "attr": "enable-analytics",
          "reflectToAttr": false,
          "docs": "True if the analytics event should fire.",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "error",
          "type": "string",
          "mutable": false,
          "attr": "error",
          "reflectToAttr": false,
          "docs": "The error message to render.",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "label",
          "type": "string",
          "mutable": false,
          "attr": "label",
          "reflectToAttr": false,
          "docs": "The label for the checkbox.",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "required",
          "type": "boolean",
          "mutable": false,
          "attr": "required",
          "reflectToAttr": false,
          "docs": "Set the input to required and render the (Required) text.",
          "docsTags": [],
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [
        {
          "event": "component-library-analytics",
          "detail": "any",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "The event used to track usage of the component. This is emitted when the\ninput value changes and enableAnalytics is true.",
          "docsTags": []
        },
        {
          "event": "vaBlur",
          "detail": "any",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "The event emitted when the input is blurred.",
          "docsTags": []
        },
        {
          "event": "vaChange",
          "detail": "any",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "The event emitted when the input value changes.",
          "docsTags": []
        }
      ],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/va-checkbox-group/va-checkbox-group.tsx",
      "encapsulation": "shadow",
      "tag": "va-checkbox-group",
      "docs": "",
      "docsTags": [
        {
          "name": "vaChange",
          "text": "The event emitted when the input value changes."
        }
      ],
      "usage": {},
      "props": [
        {
          "name": "enableAnalytics",
          "type": "boolean",
          "mutable": false,
          "attr": "enable-analytics",
          "reflectToAttr": false,
          "docs": "Whether or not an analytics event will be fired.",
          "docsTags": [],
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "error",
          "type": "string",
          "mutable": false,
          "attr": "error",
          "reflectToAttr": false,
          "docs": "A string with an error message.",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "label",
          "type": "string",
          "mutable": false,
          "attr": "label",
          "reflectToAttr": false,
          "docs": "The text label for the checkbox group.",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "required",
          "type": "boolean",
          "mutable": false,
          "attr": "required",
          "reflectToAttr": false,
          "docs": "Whether or not this input field is required.",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        }
      ],
      "methods": [],
      "events": [
        {
          "event": "component-library-analytics",
          "detail": "any",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "The event used to track usage of the component. This is emitted when an\ninput value changes and enableAnalytics is true.",
          "docsTags": []
        }
      ],
      "listeners": [
        {
          "event": "vaChange",
          "capture": false,
          "passive": false
        }
      ],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/va-featured-content/va-featured-content.tsx",
      "encapsulation": "shadow",
      "tag": "va-featured-content",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/va-loading-indicator/va-loading-indicator.tsx",
      "encapsulation": "shadow",
      "tag": "va-loading-indicator",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "enableAnalytics",
          "type": "boolean",
          "mutable": false,
          "attr": "enable-analytics",
          "reflectToAttr": false,
          "docs": "Analytics tracking function(s) will be called. Form components\nare disabled by default due to PII/PHI concerns.",
          "docsTags": [],
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "label",
          "type": "string",
          "mutable": false,
          "attr": "label",
          "reflectToAttr": false,
          "docs": "An aria label",
          "docsTags": [],
          "default": "'Loading'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "message",
          "type": "string",
          "mutable": false,
          "attr": "message",
          "reflectToAttr": false,
          "docs": "The message visible on screen when loading",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "setFocus",
          "type": "boolean",
          "mutable": false,
          "attr": "set-focus",
          "reflectToAttr": false,
          "docs": "Set to true if the loading indicator should capture focus",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        }
      ],
      "methods": [],
      "events": [
        {
          "event": "component-library-analytics",
          "detail": "any",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "The event used to track usage of the component.",
          "docsTags": []
        }
      ],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/va-modal/va-modal.tsx",
      "encapsulation": "shadow",
      "tag": "va-modal",
      "docs": "",
      "docsTags": [
        {
          "name": "click",
          "text": "Used to detect clicks outside of modal contents to close modal."
        },
        {
          "name": "keydown",
          "text": "Used to detect Escape key to close modal."
        }
      ],
      "usage": {},
      "props": [
        {
          "name": "clickToClose",
          "type": "boolean",
          "mutable": false,
          "attr": "click-to-close",
          "reflectToAttr": false,
          "docs": "Click outside modal will trigger closeEvent",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "disableAnalytics",
          "type": "boolean",
          "mutable": false,
          "attr": "disable-analytics",
          "reflectToAttr": false,
          "docs": "If true, analytics event won't be fired",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "initialFocusSelector",
          "type": "string",
          "mutable": false,
          "attr": "initial-focus-selector",
          "reflectToAttr": false,
          "docs": "Selector to explicitly specify which element should receive\nfocus when the modal is open, if the initially focused element\nis not the first focusable element in the document",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "modalTitle",
          "type": "string",
          "mutable": false,
          "attr": "modal-title",
          "reflectToAttr": false,
          "docs": "Title/header text for the modal",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "primaryButtonText",
          "type": "string",
          "mutable": false,
          "attr": "primary-button-text",
          "reflectToAttr": false,
          "docs": "Primary button text",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "secondaryButtonText",
          "type": "string",
          "mutable": false,
          "attr": "secondary-button-text",
          "reflectToAttr": false,
          "docs": "Secondary button text",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "status",
          "type": "\"continue\" | \"error\" | \"info\" | \"success\" | \"warning\"",
          "mutable": false,
          "attr": "status",
          "reflectToAttr": false,
          "docs": "",
          "docsTags": [],
          "values": [
            {
              "value": "continue",
              "type": "string"
            },
            {
              "value": "error",
              "type": "string"
            },
            {
              "value": "info",
              "type": "string"
            },
            {
              "value": "success",
              "type": "string"
            },
            {
              "value": "warning",
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "visible",
          "type": "boolean",
          "mutable": false,
          "attr": "visible",
          "reflectToAttr": false,
          "docs": "If the modal is visible or not",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        }
      ],
      "methods": [],
      "events": [
        {
          "event": "closeEvent",
          "detail": "any",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "Fires when modal is closed.",
          "docsTags": []
        },
        {
          "event": "component-library-analytics",
          "detail": "any",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "The event used to track usage of the component. Fires when a\na page is selected if enable-analytics is true.",
          "docsTags": []
        },
        {
          "event": "primaryButtonClick",
          "detail": "any",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "Fires when primary button is clicked.",
          "docsTags": []
        },
        {
          "event": "secondaryButtonClick",
          "detail": "any",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "Fires when secondary button is clicked.",
          "docsTags": []
        }
      ],
      "listeners": [
        {
          "event": "click",
          "capture": false,
          "passive": false
        },
        {
          "event": "keydown",
          "target": "window",
          "capture": false,
          "passive": false
        }
      ],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/va-on-this-page/va-on-this-page.tsx",
      "encapsulation": "shadow",
      "tag": "va-on-this-page",
      "docs": "This component will render links based on the content around it. It scans the document for any `<h2>`\nelements that contain an `id` inside of an `<article>` and will create a list of links to the headings.",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "disableAnalytics",
          "type": "boolean",
          "mutable": false,
          "attr": "disable-analytics",
          "reflectToAttr": false,
          "docs": "If true, analytics event will not be fired",
          "docsTags": [],
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [
        {
          "event": "component-library-analytics",
          "detail": "any",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "The event used to track usage of the component. This is emitted when the\nuser clicks on a link and enableAnalytics is true.",
          "docsTags": []
        }
      ],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/va-pagination/va-pagination.tsx",
      "encapsulation": "shadow",
      "tag": "va-pagination",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "ariaLabelSuffix",
          "type": "string",
          "mutable": false,
          "attr": "aria-label-suffix",
          "reflectToAttr": false,
          "docs": "Aria-label suffix text for buttons",
          "docsTags": [],
          "default": "''",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "enableAnalytics",
          "type": "boolean",
          "mutable": false,
          "attr": "enable-analytics",
          "reflectToAttr": false,
          "docs": "Whether or not an analytics event will be fired",
          "docsTags": [],
          "default": "true",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "maxPageListLength",
          "type": "number",
          "mutable": false,
          "attr": "max-page-list-length",
          "reflectToAttr": false,
          "docs": "The maximum number of pages to show at once",
          "docsTags": [],
          "default": "10",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "page",
          "type": "number",
          "mutable": false,
          "attr": "page",
          "reflectToAttr": false,
          "docs": "The current page number",
          "docsTags": [],
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "pages",
          "type": "number",
          "mutable": false,
          "attr": "pages",
          "reflectToAttr": false,
          "docs": "The total number of pages",
          "docsTags": [],
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "showLastPage",
          "type": "boolean",
          "mutable": false,
          "attr": "show-last-page",
          "reflectToAttr": false,
          "docs": "Display last page number when the page count exceeds\n`maxPageListLength`",
          "docsTags": [],
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        }
      ],
      "methods": [],
      "events": [
        {
          "event": "component-library-analytics",
          "detail": "any",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "The event used to track usage of the component. Fires when a\na page is selected if enable-analytics is true.",
          "docsTags": []
        },
        {
          "event": "pageSelect",
          "detail": "any",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "Fires when a page is selected",
          "docsTags": []
        }
      ],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/va-process-list/va-process-list.tsx",
      "encapsulation": "shadow",
      "tag": "va-process-list",
      "docs": "This component expects `<li>` elements as its children.",
      "docsTags": [],
      "usage": {},
      "props": [],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/va-progress-bar/va-progress-bar.tsx",
      "encapsulation": "shadow",
      "tag": "va-progress-bar",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "enableAnalytics",
          "type": "boolean",
          "mutable": false,
          "attr": "enable-analytics",
          "reflectToAttr": false,
          "docs": "Whether or not an analytics event will be fired.",
          "docsTags": [],
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "label",
          "type": "string",
          "mutable": false,
          "attr": "label",
          "reflectToAttr": false,
          "docs": "The text label for the progress bar.",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "percent",
          "type": "number",
          "mutable": false,
          "attr": "percent",
          "reflectToAttr": false,
          "docs": "Percent of progress made. 0 to 100.",
          "docsTags": [],
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": false,
          "required": false
        }
      ],
      "methods": [],
      "events": [
        {
          "event": "component-library-analytics",
          "detail": "any",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "The event used to track usage of the component. This is emitted when percent\nis 0 or 100 and enableAnalytics is true.",
          "docsTags": []
        }
      ],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/va-promo-banner/va-promo-banner.tsx",
      "encapsulation": "shadow",
      "tag": "va-promo-banner",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "disableAnalytics",
          "type": "boolean",
          "mutable": false,
          "attr": "disable-analytics",
          "reflectToAttr": false,
          "docs": "Analytics tracking function(s) will not be called",
          "docsTags": [],
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "href",
          "type": "string",
          "mutable": false,
          "attr": "href",
          "reflectToAttr": false,
          "docs": "`href` attribute for the `<a>` tag.",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "type",
          "type": "\"announcement\" | \"email-signup\" | \"news\"",
          "mutable": false,
          "attr": "type",
          "reflectToAttr": false,
          "docs": "Controls which icon gets used. Options are 'announcement', 'news', or 'email-signup'.",
          "docsTags": [],
          "values": [
            {
              "value": "announcement",
              "type": "string"
            },
            {
              "value": "email-signup",
              "type": "string"
            },
            {
              "value": "news",
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        }
      ],
      "methods": [],
      "events": [
        {
          "event": "closeEvent",
          "detail": "any",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "Fires when the component is closed by clicking on the close icon.",
          "docsTags": []
        },
        {
          "event": "component-library-analytics",
          "detail": "any",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "The event used to track usage of the component. This is emitted when an\nanchor link or the dismiss icon is clicked and disableAnalytics is not true.",
          "docsTags": []
        }
      ],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/va-radio/va-radio.tsx",
      "encapsulation": "shadow",
      "tag": "va-radio",
      "docs": "",
      "docsTags": [
        {
          "name": "keydown",
          "text": "The event emitted when a key is pressed."
        },
        {
          "name": "radioOptionSelected",
          "text": "The event emitted when the selected option value changes."
        }
      ],
      "usage": {},
      "props": [
        {
          "name": "enableAnalytics",
          "type": "boolean",
          "mutable": false,
          "attr": "enable-analytics",
          "reflectToAttr": false,
          "docs": "Whether or not an analytics event will be fired.",
          "docsTags": [],
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "error",
          "type": "string",
          "mutable": false,
          "attr": "error",
          "reflectToAttr": false,
          "docs": "A string with an error message.",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "label",
          "type": "string",
          "mutable": false,
          "attr": "label",
          "reflectToAttr": false,
          "docs": "The text label for the radio group.",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "required",
          "type": "boolean",
          "mutable": false,
          "attr": "required",
          "reflectToAttr": false,
          "docs": "Whether or not this input field is required.",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        }
      ],
      "methods": [],
      "events": [
        {
          "event": "component-library-analytics",
          "detail": "any",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "The event used to track usage of the component. This is emitted when a\nradio option is selected and enableAnalytics is true.",
          "docsTags": []
        },
        {
          "event": "vaValueChange",
          "detail": "any",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "The event emitted when the selected value changes",
          "docsTags": []
        }
      ],
      "listeners": [
        {
          "event": "keydown",
          "capture": false,
          "passive": false
        },
        {
          "event": "radioOptionSelected",
          "capture": false,
          "passive": false
        }
      ],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/va-radio-option/va-radio-option.tsx",
      "encapsulation": "shadow",
      "tag": "va-radio-option",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "ariaDescribedby",
          "type": "string",
          "mutable": false,
          "attr": "aria-describedby",
          "reflectToAttr": false,
          "docs": "Optional string for the ariaDescribedBy attribute.",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "checked",
          "type": "boolean",
          "mutable": false,
          "attr": "checked",
          "reflectToAttr": false,
          "docs": "Whether or not the option is selected.",
          "docsTags": [],
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "label",
          "type": "string",
          "mutable": false,
          "attr": "label",
          "reflectToAttr": false,
          "docs": "The text label for the input element.",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "name",
          "type": "string",
          "mutable": false,
          "attr": "name",
          "reflectToAttr": false,
          "docs": "The name attribute for the input element.",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "value",
          "type": "string",
          "mutable": false,
          "attr": "value",
          "reflectToAttr": false,
          "docs": "The value attribute for the input element.",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        }
      ],
      "methods": [],
      "events": [
        {
          "event": "radioOptionSelected",
          "detail": "any",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "The event emitted when the selected option value changes",
          "docsTags": []
        }
      ],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/va-segmented-progress-bar/va-segmented-progress-bar.tsx",
      "encapsulation": "shadow",
      "tag": "va-segmented-progress-bar",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "current",
          "type": "number",
          "mutable": false,
          "attr": "current",
          "reflectToAttr": false,
          "docs": "The current segment in progress",
          "docsTags": [],
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "enableAnalytics",
          "type": "boolean",
          "mutable": false,
          "attr": "enable-analytics",
          "reflectToAttr": false,
          "docs": "Whether or not an analytics event will be fired.",
          "docsTags": [],
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "label",
          "type": "string",
          "mutable": false,
          "attr": "label",
          "reflectToAttr": false,
          "docs": "An override for the default aria label.",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "total",
          "type": "number",
          "mutable": false,
          "attr": "total",
          "reflectToAttr": false,
          "docs": "The total number of segments in the progress bar",
          "docsTags": [],
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": false,
          "required": false
        }
      ],
      "methods": [],
      "events": [
        {
          "event": "component-library-analytics",
          "detail": "any",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "The event used to track usage of the component. This is emitted when the\ncomponent renders and enableAnalytics is true.",
          "docsTags": []
        }
      ],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/va-select/va-select.tsx",
      "encapsulation": "shadow",
      "tag": "va-select",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "enableAnalytics",
          "type": "boolean",
          "mutable": false,
          "attr": "enable-analytics",
          "reflectToAttr": false,
          "docs": "Whether or not to fire the analytics events",
          "docsTags": [],
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "error",
          "type": "string",
          "mutable": false,
          "attr": "error",
          "reflectToAttr": false,
          "docs": "Error message to display. When defined, this indicates an error.",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "label",
          "type": "string",
          "mutable": false,
          "attr": "label",
          "reflectToAttr": false,
          "docs": "Text label for the field.",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "name",
          "type": "string",
          "mutable": false,
          "attr": "name",
          "reflectToAttr": false,
          "docs": "Name attribute for the select field.",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "required",
          "type": "boolean",
          "mutable": false,
          "attr": "required",
          "reflectToAttr": false,
          "docs": "Whether or not this is a required field.",
          "docsTags": [],
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "value",
          "type": "string",
          "mutable": true,
          "attr": "value",
          "reflectToAttr": true,
          "docs": "Selected value (will get updated on select).",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        }
      ],
      "methods": [],
      "events": [
        {
          "event": "component-library-analytics",
          "detail": "any",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "The event used to track usage of the component. This is emitted when an\noption is selected and enableAnalytics is true.",
          "docsTags": []
        },
        {
          "event": "vaKeyDown",
          "detail": "any",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "The event attached to select's onkeydown",
          "docsTags": []
        },
        {
          "event": "vaSelect",
          "detail": "any",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "The event emitted when the selected value changes",
          "docsTags": []
        }
      ],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/va-table/va-table.tsx",
      "encapsulation": "shadow",
      "tag": "va-table",
      "docs": "This component expects `<va-table-row>` elements as children.\nChildren of each row element should be `<span>` elements. Table\nsemantics will be added and numeric columns will be right aligned.",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "descending",
          "type": "boolean",
          "mutable": false,
          "attr": "descending",
          "reflectToAttr": false,
          "docs": "Whether the initial sort state will be descending or not.",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "sortColumn",
          "type": "number",
          "mutable": false,
          "attr": "sort-column",
          "reflectToAttr": false,
          "docs": "The zero-based index of the column to sort by (Doesn't work in IE11). Optional.",
          "docsTags": [],
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "tableTitle",
          "type": "string",
          "mutable": false,
          "attr": "table-title",
          "reflectToAttr": false,
          "docs": "The title of the table",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/va-table/va-table-row.tsx",
      "encapsulation": "shadow",
      "tag": "va-table-row",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/va-telephone/va-telephone.tsx",
      "encapsulation": "shadow",
      "tag": "va-telephone",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "contact",
          "type": "string",
          "mutable": false,
          "attr": "contact",
          "reflectToAttr": false,
          "docs": "3 or 10 digit string representing the contact number",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": true
        },
        {
          "name": "extension",
          "type": "number",
          "mutable": false,
          "attr": "extension",
          "reflectToAttr": false,
          "docs": "Optional phone number extension",
          "docsTags": [],
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "international",
          "type": "boolean",
          "mutable": false,
          "attr": "international",
          "reflectToAttr": false,
          "docs": "Indicates if this is a number meant to be called from outside the US.\nPrepends a \"+1\" to the formatted number.",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "notClickable",
          "type": "boolean",
          "mutable": false,
          "attr": "not-clickable",
          "reflectToAttr": false,
          "docs": "Indicates if the phone number can be clicked or not",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "vanity",
          "type": "string",
          "mutable": false,
          "attr": "vanity",
          "reflectToAttr": false,
          "docs": "Optional vanity phone number.\nReplaces the last 4 digits with the vanity text input",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        }
      ],
      "methods": [],
      "events": [
        {
          "event": "component-library-analytics",
          "detail": "any",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "The event used to track usage of the component. This is emitted when\nclicking on an anchor link.",
          "docsTags": []
        }
      ],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/va-text-input/va-text-input.tsx",
      "encapsulation": "shadow",
      "tag": "va-text-input",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "ariaDescribedby",
          "type": "string",
          "mutable": false,
          "attr": "aria-describedby",
          "reflectToAttr": false,
          "docs": "The aria-describedby attribute for the `<input>` in the shadow DOM.",
          "docsTags": [],
          "default": "''",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "autocomplete",
          "type": "string",
          "mutable": false,
          "attr": "autocomplete",
          "reflectToAttr": false,
          "docs": "What to tell the browser to auto-complete the field with.",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "enableAnalytics",
          "type": "boolean",
          "mutable": false,
          "attr": "enable-analytics",
          "reflectToAttr": false,
          "docs": "Emit component-library-analytics events on the blur event.",
          "docsTags": [],
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "error",
          "type": "string",
          "mutable": false,
          "attr": "error",
          "reflectToAttr": false,
          "docs": "The error message to render.",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "inputmode",
          "type": "\"decimal\" | \"email\" | \"numeric\" | \"search\" | \"tel\" | \"text\" | \"url\"",
          "mutable": false,
          "attr": "inputmode",
          "reflectToAttr": false,
          "docs": "The inputmode attribute.",
          "docsTags": [],
          "values": [
            {
              "value": "decimal",
              "type": "string"
            },
            {
              "value": "email",
              "type": "string"
            },
            {
              "value": "numeric",
              "type": "string"
            },
            {
              "value": "search",
              "type": "string"
            },
            {
              "value": "tel",
              "type": "string"
            },
            {
              "value": "text",
              "type": "string"
            },
            {
              "value": "url",
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "label",
          "type": "string",
          "mutable": false,
          "attr": "label",
          "reflectToAttr": false,
          "docs": "The label for the text input.",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "maxlength",
          "type": "number",
          "mutable": false,
          "attr": "maxlength",
          "reflectToAttr": false,
          "docs": "The maximum number of characters allowed in the input.",
          "docsTags": [],
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "name",
          "type": "string",
          "mutable": false,
          "attr": "name",
          "reflectToAttr": false,
          "docs": "The name to pass to the input element.",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "required",
          "type": "boolean",
          "mutable": false,
          "attr": "required",
          "reflectToAttr": false,
          "docs": "Set the input to required and render the (Required) text.",
          "docsTags": [],
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "type",
          "type": "\"email\" | \"number\" | \"search\" | \"tel\" | \"text\" | \"url\"",
          "mutable": false,
          "attr": "type",
          "reflectToAttr": false,
          "docs": "The type attribute.",
          "docsTags": [],
          "default": "'text'",
          "values": [
            {
              "value": "email",
              "type": "string"
            },
            {
              "value": "number",
              "type": "string"
            },
            {
              "value": "search",
              "type": "string"
            },
            {
              "value": "tel",
              "type": "string"
            },
            {
              "value": "text",
              "type": "string"
            },
            {
              "value": "url",
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "value",
          "type": "string",
          "mutable": true,
          "attr": "value",
          "reflectToAttr": false,
          "docs": "The value for the input.",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [
        {
          "event": "component-library-analytics",
          "detail": "any",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "The event used to track usage of the component. This is emitted when the\ninput is blurred and enableAnalytics is true.",
          "docsTags": []
        },
        {
          "event": "vaBlur",
          "detail": "any",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "The event emitted when the input is blurred.",
          "docsTags": []
        },
        {
          "event": "vaChange",
          "detail": "any",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "The event emitted when the input value changes",
          "docsTags": []
        }
      ],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    }
  ]
}